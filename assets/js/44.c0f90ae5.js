(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{532:function(t,_,r){"use strict";r.r(_);var v=r(30),a=Object(v.a)({},(function(){var t=this,_=t.$createElement,r=t._self._c||_;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"服务监控"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#服务监控"}},[t._v("#")]),t._v(" 服务监控")]),t._v(" "),r("p",[t._v("当服务消费者与服务提供者之间建立了通信，作为管理者需要通过监控手段来观察服务是否正常，调用是否成功。服务监控是很复杂的，在微服务架构下，一次用户调用会因为服务化拆分后，变成多个不同服务之间的相互调用，这也就需要对拆分后的每个服务都监控起来。")]),t._v(" "),r("h2",{attrs:{id:"监控对象"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#监控对象"}},[t._v("#")]),t._v(" 监控对象")]),t._v(" "),r("p",[t._v("服务监控一定是通过观察数据来量化分析，所以首先要明确需要监控什么。")]),t._v(" "),r("p",[t._v("一般来说，服务监控数据有以下分类：")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("业务监控")]),t._v("：核心指标、登录、登出、下单、支付等。")]),t._v(" "),r("li",[r("strong",[t._v("应用监控")]),t._v("：接口监控、访问服务、SQL、内存使用率、响应时间、TPS、QPS 等。")]),t._v(" "),r("li",[r("strong",[t._v("系统监控")]),t._v("：CPU 利用率、内存使用量、网络带宽、IO 带宽、磁盘使用率等。")]),t._v(" "),r("li",[r("strong",[t._v("基础监控")]),t._v("：网络流量、丢包数、错包数、连接数等。")]),t._v(" "),r("li",[r("strong",[t._v("客户端监控")]),t._v("：性能、返回码、地域、运营商、版本、系统等。")])]),t._v(" "),r("h2",{attrs:{id:"监控维度"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#监控维度"}},[t._v("#")]),t._v(" 监控维度")]),t._v(" "),r("p",[t._v("一般来说，要从多个维度来对业务进行监控，具体来讲可以包括下面几个维度：")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("全局维度")]),t._v("。从整体角度监控对象的的请求量、平均耗时以及错误率，全局维度的监控一般是为了让你对监控对象的调用情况有个整体了解。")]),t._v(" "),r("li",[r("strong",[t._v("机房维度")]),t._v("。一般为了业务的高可用性，服务通常部署在不止一个机房，因为不同机房地域的不同，同一个监控对象的各种指标可能会相差很大，所以需要深入到机房内部去了解。")]),t._v(" "),r("li",[r("strong",[t._v("单机维度")]),t._v("。即便是在同一个机房内部，可能由于采购年份和批次的不同，位于不同机器上的同一个监控对象的各种指标也会有很大差异。一般来说，新采购的机器通常由于成本更低，配置也更高，在同等请求量的情况下，可能表现出较大的性能差异，因此也需要从单机维度去监控同一个对象。")]),t._v(" "),r("li",[r("strong",[t._v("时间维度")]),t._v("。同一个监控对象，在每天的同一时刻各种指标通常也不会一样，这种差异要么是由业务变更导致，要么是运营活动导致。为了了解监控对象各种指标的变化，通常需要与一天前、一周前、一个月前，甚至三个月前做比较。")]),t._v(" "),r("li",[r("strong",[t._v("核心维度")]),t._v("。业务上一般会依据重要性程度对监控对象进行分级，最简单的是分成核心业务和非核心业务。核心业务和非核心业务在部署上必须隔离，分开监控，这样才能对核心业务做重点保障。")])]),t._v(" "),r("h2",{attrs:{id:"系统监控原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#系统监控原理"}},[t._v("#")]),t._v(" 系统监控原理")]),t._v(" "),r("p",[t._v("一旦明确了要监控的对象，接下就是考虑如何监控。")]),t._v(" "),r("p",[r("strong",[t._v("监控系统主要包括四个环节：数据采集、数据传输、数据处理和数据展示")])]),t._v(" "),r("h3",{attrs:{id:"数据采集"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数据采集"}},[t._v("#")]),t._v(" 数据采集")]),t._v(" "),r("p",[t._v("通常有两种数据收集方式：")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("服务主动上报")]),t._v("：这种处理方式通过在业务代码或者服务框架里加入数据收集代码逻辑，在每一次服务调用完成后，主动上报服务的调用信息。这种方式在链路跟踪中较为常见，主流的技术方案有：Zipkin。")]),t._v(" "),r("li",[r("strong",[t._v("代理收集")]),t._v("：这种处理方式通过服务调用后把调用的详细信息记录到本地日志文件中，然后再通过代理去解析本地日志文件，然后再上报服务的调用信息。主流的技术方案有：ELK、Flume。")])]),t._v(" "),r("h3",{attrs:{id:"数据传输"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数据传输"}},[t._v("#")]),t._v(" 数据传输")]),t._v(" "),r("p",[t._v("数据传输最常用的方式有两种：")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("UDP 传输")]),t._v("：这种处理方式是数据处理单元提供服务器的请求地址，数据采集后通过 UDP 协议与服务器建立连接，然后把数据发送过去。")]),t._v(" "),r("li",[r("strong",[t._v("Kafka 传输")]),t._v("：这种处理方式是数据采集后发送到指定的 Topic，然后数据处理单元再订阅对应的 Topic，就可以从 Kafka 消息队列中读取到对应的数据。由于 Kafka 有非常高的吞吐能力，所以很适合作为大数据量的缓冲池。")])]),t._v(" "),r("h3",{attrs:{id:"数据处理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数据处理"}},[t._v("#")]),t._v(" 数据处理")]),t._v(" "),r("p",[t._v("数据处理是对收集来的原始数据进行聚合并存储。数据聚合通常有两个维度：")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("接口维度聚合")]),t._v("：这个维度是把实时收到的数据按照接口名维度实时聚合在一起，这样就可以得到每个接口的每秒请求量、平均耗时、成功率等信息。")]),t._v(" "),r("li",[r("strong",[t._v("机器维度聚合")]),t._v("：这个维度是把实时收到的数据按照调用的节点维度聚合在一起，这样就可以从单机维度去查看每个接口的实时请求量、平均耗时等信息。")])]),t._v(" "),r("p",[t._v("聚合后的数据需要持久化到数据库中存储，所选用的数据库一般分为两种：")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("全文检索数据库")]),t._v("：比如 Elasticsearch，以倒排索引的数据结构存储，需要查询的时候，根据索引来查询。")]),t._v(" "),r("li",[r("strong",[t._v("时序数据库")]),t._v("：比如 OpenTSDB，以时序序列数据的方式存储，查询的时候按照时序如 1min、5min 等维度来查询。")])]),t._v(" "),r("h3",{attrs:{id:"数据展示"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数据展示"}},[t._v("#")]),t._v(" 数据展示")]),t._v(" "),r("p",[t._v("数据展示是把处理后的数据以 Dashboard 的方式展示给用户。数据展示有多种方式，比如曲线图、饼状图、格子图展示等。")]),t._v(" "),r("h2",{attrs:{id:"监控技术"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#监控技术"}},[t._v("#")]),t._v(" 监控技术")]),t._v(" "),r("ul",[r("li",[t._v("ELK 的技术栈比较成熟，应用范围也比较广，除了可用作监控系统外，还可以用作日志查询和分析。")]),t._v(" "),r("li",[t._v("Graphite 是基于时间序列数据库存储的监控系统，并且提供了功能强大的各种聚合函数比如 sum、average、top5 等可用于监控分析，而且对外提供了 API 也可以接入其他图形化监控系统如 Grafana。")]),t._v(" "),r("li",[t._v("TICK 的核心在于其时间序列数据库 InfluxDB 的存储功能强大，且支持类似 SQL 语言的复杂数据处理操作。")]),t._v(" "),r("li",[t._v("Prometheus 的独特之处在于它采用了拉数据的方式，对业务影响较小，同时也采用了时间序列数据库存储，而且支持独有的 PromQL 查询语言，功能强大而且简洁。")])]),t._v(" "),r("h2",{attrs:{id:"参考资料"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://time.geekbang.org/column/intro/100014401",target:"_blank",rel:"noopener noreferrer"}},[t._v("从 0 开始学微服务"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://time.geekbang.org/column/intro/100046201",target:"_blank",rel:"noopener noreferrer"}},[t._v("RPC 实战与核心原理"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://time.geekbang.org/course/intro/100003901",target:"_blank",rel:"noopener noreferrer"}},[t._v("微服务架构核心 20 讲"),r("OutboundLink")],1)])])])}),[],!1,null,null,null);_.default=a.exports}}]);