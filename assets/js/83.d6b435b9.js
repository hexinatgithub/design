(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{571:function(t,r,e){"use strict";e.r(r);var o=e(30),a=Object(o.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"设计模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设计模式"}},[t._v("#")]),t._v(" 设计模式")]),t._v(" "),e("blockquote",[e("p",[e("strong",[t._v("设计模式")]),t._v("是软件设计中常见问题的典型解决方案。")])]),t._v(" "),e("h2",{attrs:{id:"📖-内容"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#📖-内容"}},[t._v("#")]),t._v(" 📖 内容")]),t._v(" "),e("p",[e("RouterLink",{attrs:{to:"/03.设计/02.设计模式/25.面向对象原则.html"}},[t._v("面向对象原则")])],1),t._v(" "),e("h3",{attrs:{id:"创建型模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建型模式"}},[t._v("#")]),t._v(" 创建型模式")]),t._v(" "),e("blockquote",[e("p",[t._v("创建型模式提供了创建对象的机制， 能够提升已有代码的灵活性和可复用性。")])]),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/03.设计/02.设计模式/01.简单工厂模式.html"}},[t._v("简单工厂模式 (Simple Factory)")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/03.设计/02.设计模式/02.工厂方法模式.html"}},[t._v("工厂方法模式 (Factory Method)")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/03.设计/02.设计模式/03.抽象工厂模式.html"}},[t._v("抽象工厂模式 (Abstract Factory)")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/03.设计/02.设计模式/04.建造者模式.html"}},[t._v("建造者模式 (Builder)")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/03.设计/02.设计模式/05.原型模式.html"}},[t._v("原型模式 (Prototype)")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/03.设计/02.设计模式/06.单例模式.html"}},[t._v("单例模式 (Singleton)")])],1)]),t._v(" "),e("h3",{attrs:{id:"结构型模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#结构型模式"}},[t._v("#")]),t._v(" 结构型模式")]),t._v(" "),e("blockquote",[e("p",[t._v("结构型模式介绍如何将对象和类组装成较大的结构， 并同时保持结构的灵活和高效。")])]),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/03.设计/02.设计模式/07.适配器模式.html"}},[t._v("适配器模式 (Adapter)")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/03.设计/02.设计模式/08.桥接模式.html"}},[t._v("桥接模式 (Bridge)")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/03.设计/02.设计模式/09.组合模式.html"}},[t._v("组合模式 (Composite)")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/03.设计/02.设计模式/10.装饰模式.html"}},[t._v("装饰模式 (Decorator)")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/03.设计/02.设计模式/11.外观模式.html"}},[t._v("外观模式 (Facade)")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/03.设计/02.设计模式/12.享元模式.html"}},[t._v("享元模式 (Flyweight)")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/03.设计/02.设计模式/13.代理模式.html"}},[t._v("代理模式 (Proxy)")])],1)]),t._v(" "),e("h3",{attrs:{id:"行为型模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#行为型模式"}},[t._v("#")]),t._v(" 行为型模式")]),t._v(" "),e("blockquote",[e("p",[t._v("行为模式负责对象间的高效沟通和职责委派。")])]),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/03.设计/02.设计模式/14.模板方法模式.html"}},[t._v("模板方法模式 (Template Method)")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/03.设计/02.设计模式/15.命令模式.html"}},[t._v("命令模式 (Command)")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/03.设计/02.设计模式/16.迭代器模式.html"}},[t._v("迭代器模式 (Iterator)")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/03.设计/02.设计模式/17.观察者模式.html"}},[t._v("观察者模式 (Observer)")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/03.设计/02.设计模式/18.解释器模式.html"}},[t._v("解释器模式 (Interpreter)")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/03.设计/02.设计模式/19.中介者模式.html"}},[t._v("中介者模式 (Mediator)")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/03.设计/02.设计模式/20.职责链模式.html"}},[t._v("职责链模式 (Chain of Responsibility)")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/03.设计/02.设计模式/21.备忘录模式.html"}},[t._v("备忘录模式 (Memento)")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/03.设计/02.设计模式/22.策略模式.html"}},[t._v("策略模式 (Strategy)")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/03.设计/02.设计模式/23.访问者模式.html"}},[t._v("访问者模式 (Visitor)")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/03.设计/02.设计模式/24.状态模式.html"}},[t._v("状态模式 (State)")])],1)]),t._v(" "),e("h2",{attrs:{id:"📚-资料"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#📚-资料"}},[t._v("#")]),t._v(" 📚 资料")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://book.douban.com/subject/2243615/",target:"_blank",rel:"noopener noreferrer"}},[t._v("《Head First 设计模式》"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://book.douban.com/subject/2334288/",target:"_blank",rel:"noopener noreferrer"}},[t._v("《大话设计模式》"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://refactoringguru.cn/design-patterns/catalog",target:"_blank",rel:"noopener noreferrer"}},[t._v("设计模式教程"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"🚪-传送"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#🚪-传送"}},[t._v("#")]),t._v(" 🚪 传送")]),t._v(" "),e("p",[t._v("◾ 🏠 "),e("a",{attrs:{href:"https://github.com/dunwu/design",target:"_blank",rel:"noopener noreferrer"}},[t._v("DESIGN 首页"),e("OutboundLink")],1),t._v(" ◾ 🎯 "),e("a",{attrs:{href:"https://github.com/dunwu/blog",target:"_blank",rel:"noopener noreferrer"}},[t._v("我的博客"),e("OutboundLink")],1),t._v(" ◾")])])}),[],!1,null,null,null);r.default=a.exports}}]);